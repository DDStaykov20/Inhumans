@model IEnumerable<CustomIdentity.Models.AssignmentModel>
@inject UserManager<AppUser> UserManager
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers

@{
ViewData["Title"] = "Index";
var user = UserManager.GetUserAsync(User).Result;
var userRole = user?.RoleName;
}

<style>
    body {
        background-color: #0dcaf0;
        font-family: cursive;
    }

    h1 {
        margin-top: 3%;
        font-size: 50px;
        margin-bottom: 5%;
    }

    #card {
        border-radius: 40px;
    }
</style>

<body>
<h1>My Assignments</h1>
@if (userRole == "Teacher")
{
<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>
}

<div class="row">
    @foreach (var item in Model)
    {
    <div id="card" class="col-md-4">
        <div class="card mb-4 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">@item.Class</h5>
                <p class="card-text">
                    <strong>Assignment:</strong> @item.AssignmentDescription<br />
                    <strong>Grade:</strong> @item.Grade<br />
                    @if (!string.IsNullOrEmpty(item.FilePath))
                    {
                    <strong>File:</strong> <a href="@Url.Action("Download", new { id = item.Id })">Download</a>
                    }
                </p>
                <div class="d-flex justify-content-between align-items-center">
                    <div class="btn-group">
                        <a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-route-id="@item.Id">View Details</a>
                        <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        @if (userRole == "Teacher")
                        {
                        <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    }
</div>
</body>
