@model IEnumerable<CustomIdentity.Models.AssignmentModel>
@inject UserManager<AppUser> UserManager
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers


@{
ViewData["Title"] = "Index";
var user = UserManager.GetUserAsync(User).Result;
var userRole = user?.RoleName;
}
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
@if (userRole == "Teacher")
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
    <tr>
        <th>@Html.DisplayNameFor(model => model.Class)</th>
        <th>@Html.DisplayNameFor(model => model.AssignmentDescription)</th>
        <th>@Html.DisplayNameFor(model => model.Grade)</th>
        <th>File</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@Html.DisplayFor(modelItem => item.Class)</td>
            <td>@Html.DisplayFor(modelItem => item.AssignmentDescription)</td>
            <td>@Html.DisplayFor(modelItem => item.Grade)</td>
            <td>
                @if (!string.IsNullOrEmpty(item.FilePath))
                {
                    <a href="@Url.Action("Download", new { id = item.Id })">Download</a>
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                @if (userRole == "Teacher")
                {
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>